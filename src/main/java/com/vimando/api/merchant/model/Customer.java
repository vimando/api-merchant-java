/*
 * Merchant API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.vimando.api.merchant.model;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModelProperty;

import java.io.Serializable;
import java.util.Objects;

/**
 * Customer
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-09-08T08:43:24.704+02:00")
public class Customer implements Serializable {
  private static final long serialVersionUID = 1L;

  @JsonProperty("city")
  private String city = null;

  @JsonProperty("company")
  private String company = null;

  /**
   * Gets or Sets country
   */
  public enum CountryEnum {
    BE("BE"),
    
    BG("BG"),
    
    DE("DE"),
    
    DK("DK"),
    
    EE("EE"),
    
    FI("FI"),
    
    FR("FR"),
    
    GR("GR"),
    
    IE("IE"),
    
    HR("HR"),
    
    LV("LV"),
    
    LT("LT"),
    
    LU("LU"),
    
    NL("NL"),
    
    PL("PL"),
    
    PT("PT"),
    
    RO("RO"),
    
    SE("SE"),
    
    CH("CH"),
    
    SK("SK"),
    
    SI("SI"),
    
    ES("ES"),
    
    CZ("CZ"),
    
    HU("HU"),
    
    GB("GB"),
    
    AT("AT");

    private String value;

    CountryEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static CountryEnum fromValue(String text) {
      for (CountryEnum b : CountryEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("country")
  private CountryEnum country = null;

  @JsonProperty("email")
  private String email = null;

  @JsonProperty("firstname")
  private String firstname = null;

  @JsonProperty("lastname")
  private String lastname = null;

  /**
   * Gets or Sets salutation
   */
  public enum SalutationEnum {
    _1("1"),
    
    _2("2");

    private String value;

    SalutationEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static SalutationEnum fromValue(String text) {
      for (SalutationEnum b : SalutationEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("salutation")
  private SalutationEnum salutation = null;

  @JsonProperty("street")
  private String street = null;

  @JsonProperty("streetAdditional")
  private String streetAdditional = null;

  @JsonProperty("streetNumber")
  private String streetNumber = null;

  @JsonProperty("zip")
  private String zip = null;

  public Customer city(String city) {
    this.city = city;
    return this;
  }

   /**
   * Get city
   * @return city
  **/
  @ApiModelProperty(value = "")
  public String getCity() {
    return city;
  }

  public void setCity(String city) {
    this.city = city;
  }

  public Customer company(String company) {
    this.company = company;
    return this;
  }

   /**
   * Get company
   * @return company
  **/
  @ApiModelProperty(value = "")
  public String getCompany() {
    return company;
  }

  public void setCompany(String company) {
    this.company = company;
  }

  public Customer country(CountryEnum country) {
    this.country = country;
    return this;
  }

   /**
   * Get country
   * @return country
  **/
  @ApiModelProperty(value = "")
  public CountryEnum getCountry() {
    return country;
  }

  public void setCountry(CountryEnum country) {
    this.country = country;
  }

  public Customer email(String email) {
    this.email = email;
    return this;
  }

   /**
   * Get email
   * @return email
  **/
  @ApiModelProperty(value = "")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public Customer firstname(String firstname) {
    this.firstname = firstname;
    return this;
  }

   /**
   * Get firstname
   * @return firstname
  **/
  @ApiModelProperty(value = "")
  public String getFirstname() {
    return firstname;
  }

  public void setFirstname(String firstname) {
    this.firstname = firstname;
  }

  public Customer lastname(String lastname) {
    this.lastname = lastname;
    return this;
  }

   /**
   * Get lastname
   * @return lastname
  **/
  @ApiModelProperty(value = "")
  public String getLastname() {
    return lastname;
  }

  public void setLastname(String lastname) {
    this.lastname = lastname;
  }

  public Customer salutation(SalutationEnum salutation) {
    this.salutation = salutation;
    return this;
  }

   /**
   * Get salutation
   * @return salutation
  **/
  @ApiModelProperty(value = "")
  public SalutationEnum getSalutation() {
    return salutation;
  }

  public void setSalutation(SalutationEnum salutation) {
    this.salutation = salutation;
  }

  public Customer street(String street) {
    this.street = street;
    return this;
  }

   /**
   * Get street
   * @return street
  **/
  @ApiModelProperty(value = "")
  public String getStreet() {
    return street;
  }

  public void setStreet(String street) {
    this.street = street;
  }

  public Customer streetAdditional(String streetAdditional) {
    this.streetAdditional = streetAdditional;
    return this;
  }

   /**
   * Get streetAdditional
   * @return streetAdditional
  **/
  @ApiModelProperty(value = "")
  public String getStreetAdditional() {
    return streetAdditional;
  }

  public void setStreetAdditional(String streetAdditional) {
    this.streetAdditional = streetAdditional;
  }

  public Customer streetNumber(String streetNumber) {
    this.streetNumber = streetNumber;
    return this;
  }

   /**
   * Get streetNumber
   * @return streetNumber
  **/
  @ApiModelProperty(value = "")
  public String getStreetNumber() {
    return streetNumber;
  }

  public void setStreetNumber(String streetNumber) {
    this.streetNumber = streetNumber;
  }

  public Customer zip(String zip) {
    this.zip = zip;
    return this;
  }

   /**
   * Get zip
   * @return zip
  **/
  @ApiModelProperty(value = "")
  public String getZip() {
    return zip;
  }

  public void setZip(String zip) {
    this.zip = zip;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Customer customer = (Customer) o;
    return Objects.equals(this.city, customer.city) &&
        Objects.equals(this.company, customer.company) &&
        Objects.equals(this.country, customer.country) &&
        Objects.equals(this.email, customer.email) &&
        Objects.equals(this.firstname, customer.firstname) &&
        Objects.equals(this.lastname, customer.lastname) &&
        Objects.equals(this.salutation, customer.salutation) &&
        Objects.equals(this.street, customer.street) &&
        Objects.equals(this.streetAdditional, customer.streetAdditional) &&
        Objects.equals(this.streetNumber, customer.streetNumber) &&
        Objects.equals(this.zip, customer.zip);
  }

  @Override
  public int hashCode() {
    return Objects.hash(city, company, country, email, firstname, lastname, salutation, street, streetAdditional, streetNumber, zip);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Customer {\n");

    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    company: ").append(toIndentedString(company)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    firstname: ").append(toIndentedString(firstname)).append("\n");
    sb.append("    lastname: ").append(toIndentedString(lastname)).append("\n");
    sb.append("    salutation: ").append(toIndentedString(salutation)).append("\n");
    sb.append("    street: ").append(toIndentedString(street)).append("\n");
    sb.append("    streetAdditional: ").append(toIndentedString(streetAdditional)).append("\n");
    sb.append("    streetNumber: ").append(toIndentedString(streetNumber)).append("\n");
    sb.append("    zip: ").append(toIndentedString(zip)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

